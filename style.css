/* Some initial writing and debugging support was assisted by AI (ChatGPT).
 All final decisions, code, and reflections are my own. */

body {
  margin: 0;
  overflow: hidden;
  background: black;
  color: white;
  font-family: 'Silkscreen', monospace;
}
  canvas {
    display: block;
  }

  #message {
  transition: opacity 0.5s ease;
  font-family: 'Silkscreen', monospace;
}
.hidden {
  opacity: 0;
  pointer-events: none;
}


  .shape-buttons {
  position: absolute;
  right: 20px;
  top: 50%;
  transform: translateY(-50%);
  display: flex;
  flex-direction: column;
  gap: 32px;
  z-index: 3;
}

.shape {
  width: 30px;
  height: 30px;
  background: transparent;
  border: 2px solid white;
  cursor: pointer;
  transition: transform 0.2s ease, box-shadow 0.2s ease;
  display: flex;
  justify-content: center;
  align-items: center;
}

.shape:hover {
  transform: scale(1.15);
}

.shape:not(.triangle):not(.star) {
  box-shadow: 0 0 8px white;
}

.shape:not(.triangle):not(.star):hover {
  box-shadow: 0 0 12px white;
}

.circle {
  border-radius: 50%;
}

.square {
  border-radius: 2px;
}
.triangle {
  width: 30px;
  height: 30px;
  background: transparent;
  border: none;
  position: relative;
  cursor: pointer;
  padding: 0;
}


.triangle::before {
  content: '';
  position: absolute;
  top: 2px;
  left: 0%;
  width: 0;
  height: 0;
  border-left: 16px solid transparent;
  border-right: 16px solid transparent;
  border-bottom: 26px solid white;
  filter: drop-shadow(0 0 6px white);
  transition: transform 0.2s ease, filter 0.2s ease;
}

.triangle:hover::before {
  transform: scale(1.15);
  filter: drop-shadow(0 0 10px white);
}

.selection-box {
  position: absolute;
  border: 3px dashed #000;
  background: rgba(0, 0, 255, 0.1);
  pointer-events: none;
  z-index: 1000;
}
.text-area {
  position: absolute;
  overflow: hidden;
  word-wrap: break-word;
  line-height: 0.9;
  font-weight: 900;
  color: #0000FF;
  z-index: 999;
}


/* Divider line between destruction and apology buttons */
.button-divider {
  width: 80%;
  height: 1px;
  background: rgba(255, 255, 255, 0.4);
  margin: 16px auto;
  position: relative;
}

.button-divider::before {
  content: '';
  position: absolute;
  top: -1px;
  left: 50%;
  transform: translateX(-50%);
  width: 60%;
  height: 3px;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.6), transparent);
  filter: blur(1px);
}

/* Star button styling */
.star {
  width: 30px;
  height: 30px;
  background: transparent;
  border: none;
  position: relative;
  cursor: pointer;
  padding: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 999;
}

.star::before {
  content: 'â˜…';
  font-size: 24px;
  color: #fff;
  transition: all 0.3s ease;
  line-height: 1;
  filter: drop-shadow(0 0 8px #FFF);
}

.star:hover::before {
  transform: scale(1.2) rotate(18deg);
  filter: drop-shadow(0 0 12px #FFF) drop-shadow(0 0 20px rgba(255, 221, 68, 0.5));
}

/* Subtle pulsing animation to the star */
.star::before {
  animation: starPulse 3s ease-in-out infinite;
}

@keyframes starPulse {
  0%, 100% { 
    opacity: 0.8; 
    transform: scale(1);
  }
  50% { 
    opacity: 1; 
    transform: scale(1.05);
  }
}

.tooltip {
  font-family: 'Silkscreen', monospace;
  font-size: 12px; /* Adjust as needed */
}


/* Base tooltip styling - uses pseudo-elements to avoid conflicts */
.shape[data-tooltip]::after {
  content: attr(data-tooltip);
  position: absolute;
  right: 45px; /* Position to the left of button */
  top: 50%;
  transform: translateY(-50%);
  
  /* Speech bubble styling */
  background-color: #0000FF;
  color: white;
  border: 2px solid white;
  padding: 8px 12px;
  border-radius: 4px;
  
  /* Typography */
  font-family: 'Silkscreen', monospace;
  font-size: 11px;
  white-space: nowrap;
  font-weight: normal;
  
  /* Hide by default */
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.3s ease, visibility 0.3s ease;
  
  /* Ensure it appears above other elements */
  z-index: 10000;
  pointer-events: none; /* Prevent interfering with button hover */
}

/* Speech bubble arrow - only for buttons with tooltips */
.shape[data-tooltip]::before {
  /* Store original content for triangle/star buttons */
  position: absolute;
}

/* Arrow for tooltip - using a different approach to avoid conflicts */
.shape[data-tooltip]:hover::after {
  opacity: 1;
  visibility: visible;
  
  /* Add arrow effect with box-shadow */
  box-shadow: 
    0 0 0 2px white, /* White border */
    8px 0 0 -2px #0000FF, /* Blue arrow body */
    10px 0 0 0 white; /* White arrow border */
}

/* Special handling for triangle button to preserve its ::before pseudo-element */
.triangle[data-tooltip]::after {
  right: 45px; /* Same positioning */
}

/* Special handling for star button to preserve its ::before pseudo-element */
.star[data-tooltip]::after {
  right: 45px; /* Same positioning */
}

/* Ensure tooltips don't interfere with existing hover effects */
.shape[data-tooltip]:hover {
  /* Preserve existing hover transform */
  transform: scale(1.15);
}

/* Ensure triangle hover effect is preserved */
.triangle[data-tooltip]:hover::before {
  transform: scale(1.15);
  filter: drop-shadow(0 0 10px white);
}

/* Ensure star hover effect is preserved */
.star[data-tooltip]:hover::before {
  transform: scale(1.2) rotate(18deg);
  filter: drop-shadow(0 0 12px #FFF) drop-shadow(0 0 20px rgba(255, 221, 68, 0.5));
}